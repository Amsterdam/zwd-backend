[uwsgi]
chdir  = /app
module = config.wsgi:application
static-index = index.html
static-map = /static=/static

strict = true
master = true
enable-threads = true
vacuum = true                        ; Delete sockets during shutdown
single-interpreter = true
die-on-term = true                   ; Shutdown when receiving SIGTERM (default is respawn)
need-app = true

disable-logging = true               ; Disable built-in logging
log-4xx = true                       ; but log 4xx's anyway
log-5xx = true                       ; and 5xx's
buffer-size = 32768

; Request handling
listen = 512                          ; Max socket backlog queue length
harakiri = 60                         ; Kill worker if request takes longer than 30 seconds
max-requests = 1000                   ; Restart worker after this many requests (avoid memory leaks)
max-worker-lifetime = 3600            ; Restart worker after this many seconds
reload-on-rss = 512                   ; Restart worker if RSS memory exceeds this MB
worker-reload-mercy = 60              ; Grace period before force killing a worker
lazy-apps = true                      ; Load app in each worker instead of master process

; Cheaper mode config (auto-scale workers)
processes = 8                         ; Maximum number of workers during peak load
cheaper = 2                           ; Minimum number of workers when idle
cheaper-initial = 4                   ; Number of workers to start with
cheaper-overload = 1                  ; Cycle length in seconds to evaluate scaling
cheaper-step = 2                      ; How many workers to add per scale-up step

; Busyness-based scaling
cheaper-algo = busyness               ; Use worker busyness to decide scaling
cheaper-busyness-multiplier = 30      ; Number of cycles before scaling down
cheaper-busyness-min = 20             ; Below this % busyness, consider scaling down
cheaper-busyness-max = 70             ; Above this % busyness, consider scaling up
cheaper-busyness-backlog-alert = 8    ; Emergency scale-up if backlog exceeds this
cheaper-busyness-backlog-step = 2     ; Workers to add in emergency scale-up

; Threads per worker
threads = 2                           ; Number of threads per worker
